{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevra\\\\IdeaProjects\\\\BUYSELL_application\\\\src\\\\main\\\\frontend\\\\src\\\\pages\\\\OrdersPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Modal, Form, Select, message, Spin, Tag, Space, Popconfirm, Drawer, Divider, List, InputNumber } from 'antd';\nimport { getOrders, createOrder, createBulkOrders, getUsers, getProducts } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst OrdersPage = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [searchUserId, setSearchUserId] = useState(null);\n  const [form] = Form.useForm();\n\n  // Состояния для массового создания\n  const [bulkCreateVisible, setBulkCreateVisible] = useState(false);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [productQuantities, setProductQuantities] = useState({});\n  const statusColors = {\n    CREATED: 'blue',\n    IN_PROCESS: 'orange',\n    SHIPPED: 'geekblue',\n    DELIVERED: 'green',\n    CANCELLED: 'red',\n    RETURNED: 'purple'\n  };\n  useEffect(() => {\n    fetchOrders();\n    fetchUsersAndProducts();\n  }, [searchUserId]);\n  const fetchOrders = async () => {\n    try {\n      setLoading(true);\n      const data = searchUserId ? await getOrdersByUser(searchUserId) : await getOrders();\n      setOrders(data || []);\n    } catch (error) {\n      message.error('Failed to fetch orders');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchUsersAndProducts = async () => {\n    try {\n      const [usersData, productsData] = await Promise.all([getUsers(), getProducts()]);\n      setUsers(usersData || []);\n      setProducts(productsData || []);\n    } catch (error) {\n      message.error('Failed to fetch additional data');\n    }\n  };\n  const enrichOrders = ordersData => {\n    return ordersData.map(order => ({\n      ...order,\n      user: users.find(u => u.id === order.userId),\n      products: products.filter(p => order.productIds.includes(p.id))\n    }));\n  };\n  const handleCreate = async () => {\n    try {\n      const values = await form.validateFields();\n\n      // Преобразуем товары с количеством в плоский список productIds\n      const productIds = values.products.flatMap(item => Array(item.quantity).fill(item.productId));\n      await createOrder({\n        userId: values.userId,\n        productIds,\n        status: 'CREATED'\n      });\n      message.success('Order created successfully');\n      resetModal();\n      await fetchOrders();\n    } catch (error) {\n      message.error('Error creating order');\n    }\n  };\n  const handleBulkCreate = async () => {\n    try {\n      if (selectedUsers.length === 0 || selectedProducts.length === 0) {\n        message.warning('Please select at least one user and one product');\n        return;\n      }\n\n      // Создаем массив заказов для массового создания\n      const bulkOrders = selectedUsers.flatMap(userId => selectedProducts.map(productId => ({\n        userId,\n        productIds: Array(productQuantities[productId] || 1).fill(productId),\n        status: 'CREATED'\n      })));\n      await createBulkOrders({\n        orders: bulkOrders\n      });\n      message.success(`Successfully created ${bulkOrders.length} orders`);\n      setBulkCreateVisible(false);\n      setSelectedUsers([]);\n      setSelectedProducts([]);\n      setProductQuantities({});\n      await fetchOrders();\n    } catch (error) {\n      console.error('Bulk create error:', error);\n      message.error(`Failed to create bulk orders: ${error.message}`);\n    }\n  };\n\n  // Остальные методы остаются без изменений\n  // ...\n\n  const columns = [{\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id',\n    sorter: (a, b) => a.id - b.id\n  }, {\n    title: 'User',\n    key: 'user',\n    render: (_, order) => order.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: order.user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 12,\n          color: '#888'\n        },\n        children: order.user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }, this) : 'N/A',\n    filters: users.map(user => ({\n      text: user.email,\n      value: user.id\n    })),\n    onFilter: (value, record) => {\n      var _record$user;\n      return ((_record$user = record.user) === null || _record$user === void 0 ? void 0 : _record$user.id) === value;\n    }\n  }, {\n    title: 'Products',\n    key: 'products',\n    render: (_, order) => {\n      var _order$products;\n      // Группируем товары по количеству\n      const productCounts = {};\n      (_order$products = order.products) === null || _order$products === void 0 ? void 0 : _order$products.forEach(product => {\n        productCounts[product.id] = (productCounts[product.id] || 0) + 1;\n      });\n      return /*#__PURE__*/_jsxDEV(Space, {\n        wrap: true,\n        children: Object.keys(productCounts).length > 0 ? Object.entries(productCounts).map(([productId, count]) => {\n          const product = products.find(p => p.id === parseInt(productId));\n          return /*#__PURE__*/_jsxDEV(Tag, {\n            children: [product === null || product === void 0 ? void 0 : product.title, \" ($\", product === null || product === void 0 ? void 0 : product.price, \") \\xD7 \", count]\n          }, productId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 37\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(Tag, {\n          color: \"warning\",\n          children: \"No products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this);\n    }\n  }\n  // Остальные колонки без изменений\n  // ...\n  ];\n  return /*#__PURE__*/_jsxDEV(Spin, {\n    spinning: loading,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16,\n        display: 'flex',\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setIsModalVisible(true),\n        children: \"Create Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setBulkCreateVisible(true),\n        children: \"Bulk Create Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Filter by user\",\n        style: {\n          width: 200\n        },\n        allowClear: true,\n        onChange: setSearchUserId,\n        options: users.map(user => ({\n          value: user.id,\n          label: `${user.email} (${user.username})`\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: enrichOrders(orders),\n      rowKey: \"id\",\n      loading: loading,\n      pagination: {\n        pageSize: 10\n      },\n      scroll: {\n        x: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Create Order\",\n      visible: isModalVisible,\n      onOk: handleCreate,\n      onCancel: resetModal,\n      okText: \"Create\",\n      cancelText: \"Cancel\",\n      width: 700,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"userId\",\n          label: \"User\",\n          rules: [{\n            required: true,\n            message: 'Please select a user'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select user\",\n            showSearch: true,\n            children: users.map(user => /*#__PURE__*/_jsxDEV(Option, {\n              value: user.id,\n              children: [user.email, \" (\", user.username, \")\"]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.List, {\n          name: \"products\",\n          children: (fields, {\n            add,\n            remove\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [fields.map(({\n              key,\n              name,\n              ...restField\n            }) => /*#__PURE__*/_jsxDEV(Space, {\n              style: {\n                display: 'flex',\n                marginBottom: 8\n              },\n              align: \"baseline\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                ...restField,\n                name: [name, 'productId'],\n                rules: [{\n                  required: true,\n                  message: 'Select a product'\n                }],\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  placeholder: \"Select product\",\n                  showSearch: true,\n                  children: products.map(product => /*#__PURE__*/_jsxDEV(Option, {\n                    value: product.id,\n                    children: [product.title, \" ($\", product.price, \")\"]\n                  }, product.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                ...restField,\n                name: [name, 'quantity'],\n                initialValue: 1,\n                rules: [{\n                  required: true,\n                  message: 'Enter quantity'\n                }],\n                children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                  min: 1,\n                  max: 100,\n                  placeholder: \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"link\",\n                danger: true,\n                onClick: () => remove(name),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 41\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 37\n            }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"dashed\",\n                onClick: () => add(),\n                block: true,\n                children: \"Add Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      title: \"Bulk Create Orders\",\n      width: 720,\n      visible: bulkCreateVisible,\n      onClose: () => setBulkCreateVisible(false),\n      footer: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setBulkCreateVisible(false),\n          style: {\n            marginRight: 8\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleBulkCreate,\n          type: \"primary\",\n          children: [\"Create \", selectedUsers.length * selectedProducts.length, \" Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Select Users\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            mode: \"multiple\",\n            placeholder: \"Select users\",\n            value: selectedUsers,\n            onChange: setSelectedUsers,\n            style: {\n              width: '100%'\n            },\n            showSearch: true,\n            children: users.map(user => /*#__PURE__*/_jsxDEV(Option, {\n              value: user.id,\n              children: [user.email, \" (\", user.username, \")\"]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"left\",\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          dataSource: products,\n          renderItem: product => /*#__PURE__*/_jsxDEV(List.Item, {\n            actions: [/*#__PURE__*/_jsxDEV(InputNumber, {\n              min: 1,\n              max: 100,\n              defaultValue: 1,\n              onChange: value => setProductQuantities(prev => ({\n                ...prev,\n                [product.id]: value\n              })),\n              style: {\n                width: 80\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 37\n            }, this)],\n            children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              title: product.title,\n              description: `$${product.price} - ${product.city}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n};\n_s(OrdersPage, \"2pHahKr20iJT+KCpziNRn0jkFZM=\", false, function () {\n  return [Form.useForm];\n});\n_c = OrdersPage;\nexport default OrdersPage;\nvar _c;\n$RefreshReg$(_c, \"OrdersPage\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Modal","Form","Select","message","Spin","Tag","Space","Popconfirm","Drawer","Divider","List","InputNumber","getOrders","createOrder","createBulkOrders","getUsers","getProducts","jsxDEV","_jsxDEV","Fragment","_Fragment","Option","OrdersPage","_s","orders","setOrders","users","setUsers","products","setProducts","isModalVisible","setIsModalVisible","loading","setLoading","searchUserId","setSearchUserId","form","useForm","bulkCreateVisible","setBulkCreateVisible","selectedUsers","setSelectedUsers","selectedProducts","setSelectedProducts","productQuantities","setProductQuantities","statusColors","CREATED","IN_PROCESS","SHIPPED","DELIVERED","CANCELLED","RETURNED","fetchOrders","fetchUsersAndProducts","data","getOrdersByUser","error","usersData","productsData","Promise","all","enrichOrders","ordersData","map","order","user","find","u","id","userId","filter","p","productIds","includes","handleCreate","values","validateFields","flatMap","item","Array","quantity","fill","productId","status","success","resetModal","handleBulkCreate","length","warning","bulkOrders","console","columns","title","dataIndex","key","sorter","a","b","render","_","children","email","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","color","username","filters","text","value","onFilter","record","_record$user","_order$products","productCounts","forEach","product","wrap","Object","keys","entries","count","parseInt","price","spinning","marginBottom","display","gap","type","onClick","placeholder","width","allowClear","onChange","options","label","dataSource","rowKey","pagination","pageSize","scroll","x","visible","onOk","onCancel","okText","cancelText","layout","Item","name","rules","required","showSearch","fields","add","remove","restField","align","initialValue","min","max","danger","block","onClose","footer","textAlign","marginRight","mode","orientation","renderItem","actions","defaultValue","prev","Meta","description","city","_c","$RefreshReg$"],"sources":["C:/Users/kevra/IdeaProjects/BUYSELL_application/src/main/frontend/src/pages/OrdersPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Table,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Select,\r\n    message,\r\n    Spin,\r\n    Tag,\r\n    Space,\r\n    Popconfirm,\r\n    Drawer,\r\n    Divider,\r\n    List,\r\n    InputNumber\r\n} from 'antd';\r\nimport {\r\n    getOrders,\r\n    createOrder,\r\n    createBulkOrders,\r\n    getUsers,\r\n    getProducts\r\n} from '../services/api';\r\n\r\nconst { Option } = Select;\r\n\r\nconst OrdersPage = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [searchUserId, setSearchUserId] = useState(null);\r\n    const [form] = Form.useForm();\r\n\r\n    // Состояния для массового создания\r\n    const [bulkCreateVisible, setBulkCreateVisible] = useState(false);\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [selectedProducts, setSelectedProducts] = useState([]);\r\n    const [productQuantities, setProductQuantities] = useState({});\r\n\r\n    const statusColors = {\r\n        CREATED: 'blue',\r\n        IN_PROCESS: 'orange',\r\n        SHIPPED: 'geekblue',\r\n        DELIVERED: 'green',\r\n        CANCELLED: 'red',\r\n        RETURNED: 'purple'\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchOrders();\r\n        fetchUsersAndProducts();\r\n    }, [searchUserId]);\r\n\r\n    const fetchOrders = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const data = searchUserId\r\n                ? await getOrdersByUser(searchUserId)\r\n                : await getOrders();\r\n            setOrders(data || []);\r\n        } catch (error) {\r\n            message.error('Failed to fetch orders');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchUsersAndProducts = async () => {\r\n        try {\r\n            const [usersData, productsData] = await Promise.all([\r\n                getUsers(),\r\n                getProducts()\r\n            ]);\r\n            setUsers(usersData || []);\r\n            setProducts(productsData || []);\r\n        } catch (error) {\r\n            message.error('Failed to fetch additional data');\r\n        }\r\n    };\r\n\r\n    const enrichOrders = (ordersData) => {\r\n        return ordersData.map(order => ({\r\n            ...order,\r\n            user: users.find(u => u.id === order.userId),\r\n            products: products.filter(p => order.productIds.includes(p.id))\r\n        }));\r\n    };\r\n\r\n    const handleCreate = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n\r\n            // Преобразуем товары с количеством в плоский список productIds\r\n            const productIds = values.products.flatMap(item =>\r\n                Array(item.quantity).fill(item.productId)\r\n            );\r\n\r\n            await createOrder({\r\n                userId: values.userId,\r\n                productIds,\r\n                status: 'CREATED'\r\n            });\r\n            message.success('Order created successfully');\r\n            resetModal();\r\n            await fetchOrders();\r\n        } catch (error) {\r\n            message.error('Error creating order');\r\n        }\r\n    };\r\n\r\n    const handleBulkCreate = async () => {\r\n        try {\r\n            if (selectedUsers.length === 0 || selectedProducts.length === 0) {\r\n                message.warning('Please select at least one user and one product');\r\n                return;\r\n            }\r\n\r\n            // Создаем массив заказов для массового создания\r\n            const bulkOrders = selectedUsers.flatMap(userId =>\r\n                selectedProducts.map(productId => ({\r\n                    userId,\r\n                    productIds: Array(productQuantities[productId] || 1).fill(productId),\r\n                    status: 'CREATED'\r\n                }))\r\n            );\r\n\r\n            await createBulkOrders({ orders: bulkOrders });\r\n            message.success(`Successfully created ${bulkOrders.length} orders`);\r\n            setBulkCreateVisible(false);\r\n            setSelectedUsers([]);\r\n            setSelectedProducts([]);\r\n            setProductQuantities({});\r\n            await fetchOrders();\r\n        } catch (error) {\r\n            console.error('Bulk create error:', error);\r\n            message.error(`Failed to create bulk orders: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    // Остальные методы остаются без изменений\r\n    // ...\r\n\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            sorter: (a, b) => a.id - b.id,\r\n        },\r\n        {\r\n            title: 'User',\r\n            key: 'user',\r\n            render: (_, order) => order.user ? (\r\n                <div>\r\n                    <div>{order.user.email}</div>\r\n                    <div style={{ fontSize: 12, color: '#888' }}>{order.user.username}</div>\r\n                </div>\r\n            ) : 'N/A',\r\n            filters: users.map(user => ({\r\n                text: user.email,\r\n                value: user.id,\r\n            })),\r\n            onFilter: (value, record) => record.user?.id === value,\r\n        },\r\n        {\r\n            title: 'Products',\r\n            key: 'products',\r\n            render: (_, order) => {\r\n                // Группируем товары по количеству\r\n                const productCounts = {};\r\n                order.products?.forEach(product => {\r\n                    productCounts[product.id] = (productCounts[product.id] || 0) + 1;\r\n                });\r\n\r\n                return (\r\n                    <Space wrap>\r\n                        {Object.keys(productCounts).length > 0 ? (\r\n                            Object.entries(productCounts).map(([productId, count]) => {\r\n                                const product = products.find(p => p.id === parseInt(productId));\r\n                                return (\r\n                                    <Tag key={productId}>\r\n                                        {product?.title} (${product?.price}) × {count}\r\n                                    </Tag>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <Tag color=\"warning\">No products</Tag>\r\n                        )}\r\n                    </Space>\r\n                );\r\n            },\r\n        },\r\n        // Остальные колонки без изменений\r\n        // ...\r\n    ];\r\n\r\n    return (\r\n        <Spin spinning={loading}>\r\n            <div style={{ marginBottom: 16, display: 'flex', gap: 8 }}>\r\n                <Button type=\"primary\" onClick={() => setIsModalVisible(true)}>\r\n                    Create Order\r\n                </Button>\r\n                <Button onClick={() => setBulkCreateVisible(true)}>\r\n                    Bulk Create Orders\r\n                </Button>\r\n                <Select\r\n                    placeholder=\"Filter by user\"\r\n                    style={{ width: 200 }}\r\n                    allowClear\r\n                    onChange={setSearchUserId}\r\n                    options={users.map(user => ({\r\n                        value: user.id,\r\n                        label: `${user.email} (${user.username})`\r\n                    }))}\r\n                />\r\n            </div>\r\n\r\n            <Table\r\n                columns={columns}\r\n                dataSource={enrichOrders(orders)}\r\n                rowKey=\"id\"\r\n                loading={loading}\r\n                pagination={{ pageSize: 10 }}\r\n                scroll={{ x: true }}\r\n            />\r\n\r\n            {/* Модальное окно создания заказа */}\r\n            <Modal\r\n                title=\"Create Order\"\r\n                visible={isModalVisible}\r\n                onOk={handleCreate}\r\n                onCancel={resetModal}\r\n                okText=\"Create\"\r\n                cancelText=\"Cancel\"\r\n                width={700}\r\n            >\r\n                <Form form={form} layout=\"vertical\">\r\n                    <Form.Item\r\n                        name=\"userId\"\r\n                        label=\"User\"\r\n                        rules={[{ required: true, message: 'Please select a user' }]}\r\n                    >\r\n                        <Select placeholder=\"Select user\" showSearch>\r\n                            {users.map(user => (\r\n                                <Option key={user.id} value={user.id}>\r\n                                    {user.email} ({user.username})\r\n                                </Option>\r\n                            ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.List name=\"products\">\r\n                        {(fields, { add, remove }) => (\r\n                            <>\r\n                                {fields.map(({ key, name, ...restField }) => (\r\n                                    <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                                        <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, 'productId']}\r\n                                            rules={[{ required: true, message: 'Select a product' }]}\r\n                                        >\r\n                                            <Select placeholder=\"Select product\" showSearch>\r\n                                                {products.map(product => (\r\n                                                    <Option key={product.id} value={product.id}>\r\n                                                        {product.title} (${product.price})\r\n                                                    </Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            {...restField}\r\n                                            name={[name, 'quantity']}\r\n                                            initialValue={1}\r\n                                            rules={[{ required: true, message: 'Enter quantity' }]}\r\n                                        >\r\n                                            <InputNumber min={1} max={100} placeholder=\"Qty\" />\r\n                                        </Form.Item>\r\n                                        <Button type=\"link\" danger onClick={() => remove(name)}>\r\n                                            Remove\r\n                                        </Button>\r\n                                    </Space>\r\n                                ))}\r\n                                <Form.Item>\r\n                                    <Button type=\"dashed\" onClick={() => add()} block>\r\n                                        Add Product\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </>\r\n                        )}\r\n                    </Form.List>\r\n                </Form>\r\n            </Modal>\r\n\r\n            {/* Drawer для массового создания */}\r\n            <Drawer\r\n                title=\"Bulk Create Orders\"\r\n                width={720}\r\n                visible={bulkCreateVisible}\r\n                onClose={() => setBulkCreateVisible(false)}\r\n                footer={\r\n                    <div style={{ textAlign: 'right' }}>\r\n                        <Button onClick={() => setBulkCreateVisible(false)} style={{ marginRight: 8 }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={handleBulkCreate} type=\"primary\">\r\n                            Create {selectedUsers.length * selectedProducts.length} Orders\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                <Form layout=\"vertical\">\r\n                    <Form.Item label=\"Select Users\">\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            placeholder=\"Select users\"\r\n                            value={selectedUsers}\r\n                            onChange={setSelectedUsers}\r\n                            style={{ width: '100%' }}\r\n                            showSearch\r\n                        >\r\n                            {users.map(user => (\r\n                                <Option key={user.id} value={user.id}>\r\n                                    {user.email} ({user.username})\r\n                                </Option>\r\n                            ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Divider orientation=\"left\">Products</Divider>\r\n                    <List\r\n                        dataSource={products}\r\n                        renderItem={product => (\r\n                            <List.Item\r\n                                actions={[\r\n                                    <InputNumber\r\n                                        min={1}\r\n                                        max={100}\r\n                                        defaultValue={1}\r\n                                        onChange={(value) => setProductQuantities(prev => ({\r\n                                            ...prev,\r\n                                            [product.id]: value\r\n                                        }))}\r\n                                        style={{ width: 80 }}\r\n                                    />\r\n                                ]}\r\n                            >\r\n                                <List.Item.Meta\r\n                                    title={product.title}\r\n                                    description={`$${product.price} - ${product.city}`}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </Form>\r\n            </Drawer>\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport default OrdersPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}